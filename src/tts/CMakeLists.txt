add_library(tts_bytedancev3 bytedancev3.cpp)
target_compile_features(tts_bytedancev3 PUBLIC cxx_std_20)
set_target_properties(tts_bytedancev3 PROPERTIES CXX_EXTENSIONS OFF)
target_link_libraries(tts_bytedancev3 PUBLIC common_tools)
target_link_libraries(tts_bytedancev3 PUBLIC yaml-cpp::yaml-cpp)
target_link_libraries(tts_bytedancev3 PUBLIC Boost::log)
find_package(OpenSSL REQUIRED)
target_link_libraries(tts_bytedancev3 PRIVATE OpenSSL::SSL)
target_link_libraries(tts_bytedancev3 PUBLIC Boost::json)
find_library(OGG_LIBRARY NAMES ogg)
target_link_libraries(tts_bytedancev3 PRIVATE ${OGG_LIBRARY})
find_library(OPUS_LIBRARY NAMES opus)
target_link_libraries(tts_bytedancev3 PRIVATE ${OPUS_LIBRARY})

add_library(tts_edge edge.cpp)
target_compile_features(tts_edge PUBLIC cxx_std_20)
set_target_properties(tts_edge PROPERTIES CXX_EXTENSIONS OFF)
target_link_libraries(tts_edge PUBLIC common_tools)
target_link_libraries(tts_edge PUBLIC yaml-cpp::yaml-cpp)
target_link_libraries(tts_edge PUBLIC common_request)

add_library(tts base.cpp)
target_compile_features(tts PUBLIC cxx_std_20)
set_target_properties(tts PROPERTIES CXX_EXTENSIONS OFF)
target_link_libraries(tts PUBLIC config_setting)
target_link_libraries(tts PUBLIC tts_bytedancev3)
target_link_libraries(tts PUBLIC tts_edge)